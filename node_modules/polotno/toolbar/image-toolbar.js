"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.ImageToolbar=exports.setRemoveBackgroundEnabled=void 0;const react_1=__importDefault(require("react")),mobx_react_lite_1=require("mobx-react-lite"),core_1=require("@blueprintjs/core"),popover2_1=require("@blueprintjs/popover2"),styled_1=__importDefault(require("../utils/styled")),filters_picker_1=__importDefault(require("./filters-picker")),flip_button_1=__importDefault(require("./flip-button")),remove_background_button_1=require("./remove-background-button"),l10n_1=require("../utils/l10n");let removeBackgroundEnabled=!1;function setRemoveBackgroundEnabled(e){removeBackgroundEnabled=e}exports.setRemoveBackgroundEnabled=setRemoveBackgroundEnabled;const FitButton=({element:e,store:t})=>react_1.default.createElement(core_1.Button,{text:(0,l10n_1.t)("toolbar.fitToBackground"),minimal:!0,onClick:()=>{e.set({x:0,y:0,width:t.width,height:t.height,rotation:0})}}),CropButton=({element:e,store:t})=>react_1.default.createElement(core_1.Button,{text:(0,l10n_1.t)("toolbar.crop"),minimal:!0,onClickCapture:t=>{t.stopPropagation(),e.toggleCropMode(!0)}}),RemoveClipButton=({element:e,store:t})=>react_1.default.createElement(core_1.Button,{text:(0,l10n_1.t)("toolbar.removeClip"),minimal:!0,onClickCapture:t=>{e.set({clipSrc:""})}}),PROPS_MAP={flip:flip_button_1.default,filter:filters_picker_1.default,fitToBackground:FitButton,crop:CropButton,removeClip:RemoveClipButton,removeBackground:remove_background_button_1.RemoveBackgroundButton},Container=(0,styled_1.default)("div")`
  width: calc(100% - 450px);

  @media screen and (max-width: 500px) {
    width: auto;
  }
`;exports.ImageToolbar=(0,mobx_react_lite_1.observer)((({store:e,hideImageFlip:t,hideImageEffects:r,hideImageCrop:o,hideImageFit:a})=>{const l=e.selectedElements[0],n=l._cropModeEnabled,i=react_1.default.useRef({});react_1.default.useEffect((()=>{n&&(i.current={x:l.x,y:l.y,width:l.width,height:l.height,cropX:l.cropX,cropY:l.cropY,cropWidth:l.cropWidth,cropHeight:l.cropHeight})}),[n]);const c=[!t&&"flip",!r&&"filter",!a&&"fitToBackground",!o&&"crop",l.clipSrc&&"removeClip",removeBackgroundEnabled&&"removeBackground"].filter((e=>!!e));return react_1.default.createElement(Container,{className:"bp3-navbar-group bp3-align-left"},!n&&react_1.default.createElement(core_1.OverflowList,{items:c,style:{width:"100%"},visibleItemRenderer:t=>{const r=PROPS_MAP[t];return react_1.default.createElement(r,{element:l,store:e,key:t})},collapseFrom:core_1.Boundary.END,overflowRenderer:t=>react_1.default.createElement(popover2_1.Popover2,{content:react_1.default.createElement("div",{style:{padding:"10px",display:"flex"}},t.map((t=>{const r=PROPS_MAP[t];return react_1.default.createElement(r,{key:t,element:l,store:e})}))),position:core_1.Position.BOTTOM},react_1.default.createElement(core_1.Button,{icon:"more",minimal:!0,style:{marginLeft:"20px"}}))}),n&&react_1.default.createElement(react_1.default.Fragment,null,react_1.default.createElement(core_1.Button,{text:(0,l10n_1.t)("toolbar.cropDone"),minimal:!0,icon:"tick",onClickCapture:e=>{l.toggleCropMode(!1)}}),react_1.default.createElement(core_1.Button,{text:(0,l10n_1.t)("toolbar.cropCancel"),minimal:!0,icon:"cross",onClickCapture:e=>{l.set(Object.assign({},i.current)),l.toggleCropMode(!1)}})))})),exports.default=exports.ImageToolbar;