"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.replaceColors=exports.fixSize=exports.getSvgSize=exports.svgToURL=exports.getColors=exports.urlToString=exports.urlToBase64=void 0;const konva_1=__importDefault(require("konva")),gradient_1=require("./gradient");function isInsideDef(e){for(;e.parentNode;){if("defs"===e.nodeName)return!0;e=e.parentNode}return!1}function getElementColors(e){const t={fill:"",stroke:""};return e.getAttribute("fill")&&"none"!==e.getAttribute("fill")&&(t.fill=e.getAttribute("fill")),!t.fill&&e.style.fill&&"none"!==e.style.fill&&(t.fill=e.style.fill),e.getAttribute("stroke")&&(t.stroke=e.getAttribute("stroke")),!t.stroke&&e.style.stroke&&(t.stroke=e.style.stroke),t.stroke||t.fill||(t.fill="black"),t}const SVG_SHAPES=["path","rect","circle"];function getAllElementsWithColor(e){for(var t=[],r=e.getElementsByTagName("*"),o=0,n=r.length;o<n;o++){const e=r[o];isInsideDef(e)||(null!==e.getAttribute("fill")&&t.push(e),(null!==e.getAttribute("stroke")||e.style&&e.style.fill||SVG_SHAPES.indexOf(e.nodeName)>=0)&&t.push(e))}return t}async function urlToBase64(e){const t=await fetch(e);return svgToURL(await t.text())}async function urlToString(e){const t=await fetch(e,{mode:"cors"});return await t.text()}function getColors(e){const t=getAllElementsWithColor((new DOMParser).parseFromString(e,"image/svg+xml")),r=[];return t.forEach((e=>{const{fill:t,stroke:o}=getElementColors(e);[t,o].forEach((e=>{if(!e)return;konva_1.default.Util.colorToRGBA(e)&&-1===r.indexOf(e)&&r.push(e)}))})),r}function svgToURL(e){return"data:image/svg+xml;base64,"+window.btoa(unescape(encodeURIComponent(e)))}async function getSvgSize(e){const t=await urlToString(e);const r=(new DOMParser).parseFromString(t,"image/svg+xml").documentElement.getAttribute("viewBox"),[o,n,i,l]=(null==r?void 0:r.split(" "))||[];return{width:parseFloat(i),height:parseFloat(l)}}function fixSize(e){var t=(new DOMParser).parseFromString(e,"image/svg+xml");const r=t.documentElement.getAttribute("viewBox"),[o,n,i,l]=(null==r?void 0:r.split(" "))||[];t.documentElement.getAttribute("width")||t.documentElement.setAttribute("width",i+"px"),t.documentElement.getAttribute("height")||t.documentElement.setAttribute("height",l+"px");return(new XMLSerializer).serializeToString(t)}exports.urlToBase64=urlToBase64,exports.urlToString=urlToString,exports.getColors=getColors,exports.svgToURL=svgToURL,exports.getSvgSize=getSvgSize,exports.fixSize=fixSize;const sameColors=(e,t)=>!(!t||!t)&&(e.r===t.r&&e.g===t.g&&e.b===t.b&&e.a===t.a);function createGradient(e,t,r,o){var n=e.namespaceURI,i=document.createElementNS(n,"linearGradient");const l=konva_1.default.Util.degToRad(r+90),s=(Math.cos(l)+1)/2,a=(Math.sin(l)+1)/2,u=(Math.cos(l+Math.PI)+1)/2,c=(Math.sin(l+Math.PI)+1)/2;i.setAttribute("x1",100*s+"%"),i.setAttribute("y1",100*a+"%"),i.setAttribute("x2",100*u+"%"),i.setAttribute("y2",100*c+"%"),i.setAttribute("gradientUnits","userSpaceOnUse"),i.setAttribute("id",t);for(var g=0;g<o.length;g++){var f=o[g],d=document.createElementNS(n,"stop");for(var p in f)f.hasOwnProperty(p)&&d.setAttribute(p,f[p]);i.appendChild(d)}return(e.querySelector("defs")||e.insertBefore(document.createElementNS(n,"defs"),e.firstChild)).appendChild(i)}function replaceColors(e,t){var r=(new DOMParser).parseFromString(e,"image/svg+xml");const o=getAllElementsWithColor(r),n=Array.from(t.keys());o.forEach((e=>{const{fill:o,stroke:i}=getElementColors(e);[{prop:"fill",color:o},{prop:"stroke",color:i}].forEach((({prop:o,color:i})=>{const l=n.find((e=>{return t=konva_1.default.Util.colorToRGBA(e),!(!(r=konva_1.default.Util.colorToRGBA(i))||!r)&&t.r===r.r&&t.g===r.g&&t.b===r.b&&t.a===r.a;var t,r}));if(l){const n=t.get(l);if((0,gradient_1.isGradient)(n)){const[t,i,l]=(0,gradient_1.parseColor)(n),s=[{offset:"0%","stop-color":i},{offset:"100%","stop-color":l}],a="color"+Math.round(1e8*Math.random());createGradient(r.children[0],a,t,s),e.style[o]=null,e.setAttribute(o,`url('#${a}')`)}else e.style[o]=t.get(l)}}))}));return svgToURL((new XMLSerializer).serializeToString(r))}exports.replaceColors=replaceColors;