"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.useSnap=void 0;const konva_1=__importDefault(require("konva"));var GUIDELINE_OFFSET=5;function getObjectSnappingEdges(e){const t=e.getClientRect(),n=e.getAbsolutePosition();return{vertical:[{guide:t.x,offset:n.x-t.x,snap:"start"},{guide:t.x+t.width/2,offset:n.x-t.x-t.width/2,snap:"center"},{guide:t.x+t.width,offset:n.x-t.x-t.width,snap:"end"}],horizontal:[{guide:t.y,offset:n.y-t.y,snap:"start"},{guide:t.y+t.height/2,offset:n.y-t.y-t.height/2,snap:"center"},{guide:t.y+t.height,offset:n.y-t.y-t.height,snap:"end"}]}}function getGuides(e,t){var n=[],i=[];e.vertical.forEach((e=>{t.vertical.forEach((t=>{var i=Math.abs(e-t.guide);i<GUIDELINE_OFFSET&&n.push({lineGuide:e,diff:i,snap:t.snap,offset:t.offset})}))})),e.horizontal.forEach((e=>{t.horizontal.forEach((t=>{var n=Math.abs(e-t.guide);n<GUIDELINE_OFFSET&&i.push({lineGuide:e,diff:n,snap:t.snap,offset:t.offset})}))}));var o=[],s=n.sort(((e,t)=>e.diff-t.diff))[0],a=i.sort(((e,t)=>e.diff-t.diff))[0];return s&&o.push(Object.assign({orientation:"V"},s)),a&&o.push(Object.assign(Object.assign({},a),{orientation:"H"})),o}let warningShowed=!1;function useSnap(e,t=!0){return warningShowed||(console.warn("Polotno warning: useSnap hook is deprecated. Just stop using it. Polotno will snap objects automatically."),warningShowed=!0),{onDragMove:()=>{},onDragEnd:()=>{}}}exports.useSnap=useSnap;